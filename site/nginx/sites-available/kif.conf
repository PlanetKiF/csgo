server {
  root /var/www/html;

  # Add index.php to the list if you are using PHP
  index index.html index.htm index.nginx-debian.html;
  server_name %CSGO_HOST%; # managed by Certbot

   location /local {
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
                try_files $uri $uri/ =404;
        }

  resolver 8.8.8.8 ipv6=off;
  set $ga 'www.google-analytics.com';
  set $gas 'analytics.google.com';

  location = /stats {
       proxy_set_header Accept-Encoding "";
       #sub_filter '"/g/collect' '"/g/c';
       sub_filter '/g/collect' '/g/c';
       sub_filter '/r/collect' '/r/c';
       sub_filter '/j/collect' '/j/c';
       sub_filter '/collect' '/c';
       sub_filter $ga $server_name;
       sub_filter $gas $server_name;
       sub_filter_types *;
       sub_filter_once off;

       proxy_pass https://www.googletagmanager.com/gtag/js$is_args$args&uip=$remote_addr;
       break;
  }
  location / {
    #proxy_set_header X-Real-IP $remote_addr;
    #proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #proxy_set_header X-Forwarded-Proto $scheme;

    if ($uri ~ /g/c){
      proxy_pass https://$ga/g/collect$is_args$args&uip=$remote_addr;
      break;
    }if ($uri ~ /r/c){
      proxy_pass https://$ga/r/collect$is_args$args&uip=$remote_addr;
      break;
    }
    if ($uri ~ /j/c){
      proxy_pass https://$ga/j/collect$is_args$args&uip=$remote_addr;
      break;
    }
    if ($uri ~ /c){
      proxy_pass https://$ga/collect$is_args$args&uip=$remote_addr;
      break;
    }

    proxy_pass https://$ga$uri$is_args$args&uip=$remote_addr;
  }

  # use any of the following two
  #real_ip_header CF-Connecting-IP;



  listen [::]:443 ssl ipv6only=on; # managed by Certbot
  listen 443 ssl; # managed by Certbot
  ssl_certificate /etc/letsencrypt/live/%CSGO_HOST%/fullchain.pem; # managed by Certbot
  ssl_certificate_key /etc/letsencrypt/live/%CSGO_HOST%/privkey.pem; # managed by Certbot
  include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}


server {
  # redirect http to https
  if ($host = %CSGO_HOST%) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


	listen 80 ;
	listen [::]:80 ;
    server_name %CSGO_HOST%;
    return 404; # managed by Certbot

}
